% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SagaLib.R
\name{SagaLib}
\alias{SagaLib}
\title{Parses valid SAGA-GIS libraries and tools into a nested list of functions}
\description{
Parses valid SAGA-GIS libraries and tools into a nested list of functions

Parses valid SAGA-GIS libraries and tools into a nested list of functions
}
\details{
Establishes the link to SAGA GIS by generating a SAGA help file and parsing
all libraries, tools and options from the help files into a nested list of
library, module and options, that are contained within an saga environment
object object. Intended to be used internally by \code{\link{saga_gis}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SagaLib-new}{\code{SagaLib$new()}}
\item \href{#method-SagaLib-create_binding}{\code{SagaLib$create_binding()}}
\item \href{#method-SagaLib-clean_library}{\code{SagaLib$clean_library()}}
\item \href{#method-SagaLib-clone}{\code{SagaLib$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SagaLib-new"></a>}}
\if{latex}{\out{\hypertarget{method-SagaLib-new}{}}}
\subsection{Method \code{new()}}{
Create a new SagaLib R6 class object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SagaLib$new(saga_bin = NULL, raster_backend = "terra", vector_backend = "sf")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{saga_bin}}{An optional character vector to specify the path to the
saga_cmd executable. Otherwise the function will perform a search for
saga_cmd.}

\item{\code{raster_backend}}{A character vector to specify the library to use for
handling raster data. Currently, either "terra" or "stars" is
supported. The default is "terra".}

\item{\code{vector_backend}}{A character to specify the library to use for handling
vector data. Currently, either "sf", "SpatVector" or "SpatVectorProxy" is
supported. The default is "sf".}

\item{\code{opt_lib}}{A character vector of a subset of SAGA-GIS tool libraries to
generate dynamic functions that map to each tool. Used to save time if you
only want to import a single library.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SagaLib-create_binding"></a>}}
\if{latex}{\out{\hypertarget{method-SagaLib-create_binding}{}}}
\subsection{Method \code{create_binding()}}{
Create the binding to the SAGA-GIS command line binary
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SagaLib$create_binding(opt_lib = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SagaLib-clean_library"></a>}}
\if{latex}{\out{\hypertarget{method-SagaLib-clean_library}{}}}
\subsection{Method \code{clean_library()}}{
Clean any invalid tools and libraries from the bindings, for example
those that cannot be used in a non-interactive setting
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SagaLib$clean_library()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SagaLib-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SagaLib-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SagaLib$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
